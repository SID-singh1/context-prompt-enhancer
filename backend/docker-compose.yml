version: '3.8'

services:
  db:
    # Use a pre-built image with PostgreSQL and pgvector
    image: pgvector/pgvector:pg16
    container_name: prompt_db_container
    environment:
      - POSTGRES_DB=prompt_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword
    volumes:
      # This saves your database data on your machine, so it persists
      # even if you stop and remove the container.
      - postgres_data:/var/lib/postgresql/data
    ports:
      # Map the container's port 5432 to your machine's port 5433
      # so you can connect with DBeaver at localhost:5433
      - "5433:5432"

  app:
    container_name: prompt_app_container
    # Build the Python image from the Dockerfile in the current directory
    build: .
    # Wait for the database to be ready before starting the app
    depends_on:
      - db
    environment:
      # Pass database connection details to the Python script
      - DB_NAME=prompt_db
      - DB_USER=postgres
      - DB_PASS=mysecretpassword
      # IMPORTANT: 'db' is the hostname for the PostgreSQL container
      - DB_HOST=db 
      - DB_PORT=5432
      # Pass your Groq API key to the script
      - GROQ_API_KEY=YOUR_GROQ_API_KEY_HERE
    # Keep the container running so we can execute commands in it
    command: tail -f /dev/null

volumes:
  # Define the named volume for data persistence
  postgres_data: